ПОДКЛЮЧЕНИЕ К БД
public partial class DBMechanicEntities : DbContext
{
    private static DBMechanicEntities _context;
    public DBMechanicEntities()
        : base("name=DBMechanicEntities")
    {
    }
 
    public static DBMechanicEntities GetContext()
    {
        if ( _context == null )
            _context = new DBMechanicEntities();
        return _context;
    }
 
АВТОРИЗАЦИЯ
 public partial class Auth : Window
 {
     private DBMechanicEntities dbContext = new DBMechanicEntities();
     public Auth()
     {
         InitializeComponent();
     }
 
     private void Button_Click(object sender, RoutedEventArgs e)
     {
         string login = tbLogin.Text;
         string password = pbPass.Password;
         var user = dbContext.Пользователи.FirstOrDefault(u => u.Логин == login && u.Пароль == password);
         if (user != null)
         {
             MessageBox.Show("Авторизация успешна!");
             if (user.Должность == "Admin")
             {
                 Admin m = new Admin();
                 m.Show();
                 this.Close();
             }
         }
         else
         {
             MessageBox.Show("Неверный логин или пароль!");
         }
ПРОСМОТР
<DataGrid Name="dg" Height="228" Width="772" Canvas.Left="14" Canvas.Top="188" HorizontalAlignment="Center" VerticalAlignment="Top" AutoGenerateColumns="False">
    <DataGrid.Columns>
        <DataGridTextColumn x:Name="d1" Header="№" Binding="{Binding Номер_заказа}" Width="*"/>
        <DataGridTextColumn x:Name="d2" Header="Номер клиента" Binding="{Binding Телефон_клиента}" Width="*"/>
        <DataGridTextColumn x:Name="d3" Header="Гос. номер" Binding="{Binding Гос_номер}" Width="*"/>
        <DataGridTextColumn x:Name="d4" Header="Марка" Binding="{Binding Марка_авто}" Width="*"/>
        <DataGridTextColumn x:Name="d5" Header="Модель" Binding="{Binding Модель_авто}" Width="*"/>
        <DataGridTextColumn x:Name="d6" Header="Год выпуска" Binding="{Binding Год_выпуска}" Width="*"/>
        <DataGridTextColumn x:Name="d7" Header="Кол-во повреждений" Binding="{Binding Количество_повреждений}" Width="*"/>
        <DataGridTextColumn x:Name="d8" Header="Описание повреждений" Binding="{Binding Описание_повреждений}" Width="*"/>
        <DataGridTextColumn x:Name="d9" Header="Заказ детали" Binding="{Binding Заказ_детали}" Width="*"/>
        <DataGridTextColumn x:Name="d10" Header="Жидкости" Binding="{Binding Жидкости_авто}" Width="*"/>
        <DataGridTextColumn x:Name="d11" Header="Дата заказа" Binding="{Binding Дата_заказа}" Width="*"/>
        <DataGridTextColumn x:Name="d12" Header="Статус заказа" Binding="{Binding Статус_заказа}" Width="*"/>
        <DataGridTextColumn x:Name="d13" Header="Номер пользователя" Binding="{Binding Номер_пользователя}" Width="*"/>
        <DataGridTextColumn x:Name="d14" Header="Итог стоимость" Binding="{Binding Итоговая_стоимость}" Width="*"/>
    </DataGrid.Columns>
</DataGrid>
С# для синхронизации с БД
dg.ItemsSource = DBMechanicEntities.GetContext().Заказы.ToList();
ПЕРЕХОД МЕЖДУ ОКНАМИ
fr.NavigationService.Navigate(new PageUchet());
УДАЛЕНИЕ
private void BtDelete_Click(object sender, RoutedEventArgs e)
        {
            var item = VodyatelsGrid.SelectedItems.Cast<Автомобили>().ToList();
            if (MessageBox.Show($"Вы точно хотите удалить элемент?\nЭто может вызвать необратимые последствия!", "Внимание!",
                MessageBoxButton.YesNo, MessageBoxImage.Question) == MessageBoxResult.Yes)
            {
                try
                {
                    foreach (var removing in item)
                    {
                        Автомобили _item = entities.Автомобили
                             .Where(c => c.ID == removing.ID)
                             .FirstOrDefault();

                        entities.Автомобили.Remove(_item);
                        entities.SaveChanges();
                    }

                    MessageBox.Show("Удалено!");

                    VodyatelsGrid.ItemsSource = entities.Автомобили.ToList();
                }
                catch (Exception ex)
                {
                    // Сообщение об ошибке, если она есть
                    MessageBox.Show(ex.Message.ToString());
                }
            }
РЕДАКТИРОВАНИЕ
private void BtEdit_Click(object sender, RoutedEventArgs e)
 {
     _ = new Автомобили();
     Автомобили item = (sender as Button).DataContext as Автомобили;

     Application.Current.Properties["AddEditItemId"] = item.ID;
     App.status = false;
     NavigationService.Navigate(new AutoAddEdit(item));
 }
 

Другое окно куда отправляется айди для заполнения полей для редактирования

 private readonly GIBDD_DBEntities entities = new GIBDD_DBEntities();
 private readonly int itemid = Convert.ToInt32(Application.Current.Properties["AddEditItemId"]);
 private readonly Автомобили _item = new Автомобили();
 public AutoAddEdit(Автомобили авто)
 {
     InitializeComponent();
     cbSotr.ItemsSource = entities.Водители.ToList();
     Автомобили item = entities.Автомобили.FirstOrDefault(i => i.ID == itemid);
     if (App.status == false)
     {
         DataContext = item;
     }
     else if (App.status == true)
     {
         DataContext = _item;

     }
ДОБАВЛЕНИЕ
private void Button_Click(object sender, RoutedEventArgs e)
  {
      DBMechanicEntities context = new DBMechanicEntities();
      var user_add = new Пользователи();
      user_add.Номер_пользователя = int.Parse(tbId.Text);
      user_add.Логин = tbLogin.Text;
      user_add.Пароль = tbPass.Text;
      user_add.Фамилия = tbFam.Text;
      user_add.Имя = tbName.Text;
      user_add.Отчество = tbLastName.Text;
      user_add.Дата_рождения = Convert.ToDateTime(tbDR.Text);
      user_add.Эл_почта = tbMail.Text;
      user_add.Должность = tbDol.Text;
      DBMechanicEntities.GetContext().Пользователи.Add(user_add);
      DBMechanicEntities.GetContext().SaveChanges();
      MessageBox.Show("Пользователь добавлен");
      this.Close();
  }
